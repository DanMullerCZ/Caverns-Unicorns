# 01. Hero Registration

## Description

I, as a new player, want to register into the game. I have to provide
***name*** of my character and ***password***.

## Backend Part

### Endpoint

`POST /registration`

### Form Data Validations

- **name**: required, may not be an empty string, must be unique
- **password**: must be at least 8 characters long

### Sample Request

```json
{
    "name": "superhero",
    "password": "awesome-possum",
}
```

### Sample Response

```json
{
    "name": "superhero",
    "level": 1,
    "gold": 10,
    "experience": 0,
    "hp": 100,
    "attack": 5,
    "defense": 5,
    "position": {
        "coordinate_x": 4,
        "coordinate_y": 20,
    }
}
```

### Testing (BE)

- Create ***unit tests*** that should cover both the positive & negative cases

## Frontend Part

### Acceptance Criteria

#### Scenario 1

Given the /register route. When the page is loaded. Then the register form
exists.

#### Scenario 2

Given the loaded register page. When I click on the submit button. And the input
fields are blank. Then an error message shows up: "All fields are
required."

#### Scenario 3

Given the loaded register page. When I click on the submit button. And the
hero name was taken. Then an error message shows up: "Hero name is already taken,
choose another one."

#### Scenario 4

Given the loaded register page. When I click on the submit button. And the
password is under 8 characters. Then an error message shows up: "Password must
be 8 characters."

#### Scenario 5

Given the loaded register page. When I click on the submit button. And I give a
unique hero name and a valid password, then a new user is created and I am navigated to the /login page.

### Testing (FE)

- Create ***unit tests*** that should cover both the positive & negative cases
- Create an ***endpoint test*** that verifies the registration endpoint works
  properly
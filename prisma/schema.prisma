generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.VarChar(300)
  access_token      String? @db.VarChar(300)
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Characters {
  id       Int     @id @default(autoincrement())
  name     String? @db.VarChar(20)
  race_id  Int?
  class_id Int?
  owner_id Int?
}

model Class {
  name        String
  id          Int     @id @default(autoincrement())
  description String? @db.VarChar(255)
}

model Login {
  id       Int     @id @default(autoincrement())
  username String? @db.VarChar(30)
  password String? @db.VarChar(30)
}

model Race {
  name        String
  id          Int     @id @default(autoincrement())
  description String? @db.VarChar(255)
  dex         Int?
  str         Int?
  con         Int?
  int         Int?
  wis         Int?
  char        Int?
}

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const head_1 = __importDefault(require("next/head"));
const link_1 = __importDefault(require("next/link"));
const react_1 = require("next-auth/react");
const trpc_1 = require("../utils/trpc");
const react_2 = require("react");
const VideoBackground_1 = __importDefault(require("components/VideoBackground"));
const NavigationBar_1 = __importDefault(require("components/NavigationBar"));
const Home = () => {
    return (<>
      <head_1.default>
        <VideoBackground_1.default />
        <meta name="description" content="Generated by create-t3-app"/>
        <link rel="icon" href="/favicon.ico"/>
      </head_1.default>
      <NavigationBar_1.default />
      <main className="goldeffect gold mx-auto flex flex-col items-center justify-center gap-10 px-6 py-8 font-LOTR md:h-screen">
        <h1 className=" goldeffect gold text-[100px]">
          Welcome to Greens & Foxes
        </h1>
        <AuthShowcase />
      </main>
    </>);
};
exports.default = Home;
const AuthShowcase = () => {
    var _a, _b, _c, _d, _e;
    const { data: sessionData } = (0, react_1.useSession)();
    const s = (0, react_1.useSession)();
    (_b = (_a = s.data) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id;
    const { data: secretMessage } = trpc_1.trpc.auth.getSecretMessage.useQuery(undefined, // no input
    { enabled: (sessionData === null || sessionData === void 0 ? void 0 : sessionData.user) !== undefined });
    console.log(sessionData);
    const [message, setMessage] = (0, react_2.useState)('This is the subscription field');
    trpc_1.trpc.wsRouter.sub.useSubscription(undefined, {
        onData(data) {
            setMessage(data);
        },
    });
    const messenger = trpc_1.trpc.wsRouter.input.useMutation();
    const handleChange = (ev) => {
        const target = ev.target;
        messenger.mutate({ typing: target.value });
    };
    // const changePassword = trpc.userSettings.changePassword.useQuery(
    // )
    return (<div className="text-[40px]">
      <p>{(_c = sessionData === null || sessionData === void 0 ? void 0 : sessionData.user) === null || _c === void 0 ? void 0 : _c.email}</p>
      <p>{(_d = sessionData === null || sessionData === void 0 ? void 0 : sessionData.user) === null || _d === void 0 ? void 0 : _d.id}</p>

      <p>
        {sessionData && <span>Logged in as {(_e = sessionData.user) === null || _e === void 0 ? void 0 : _e.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button className="goldeffect mr-12 " onClick={sessionData ? () => (0, react_1.signOut)() : () => (0, react_1.signIn)()}>
        {sessionData ? 'Log Out' : 'Log In'}
      </button>
      <link_1.default className="goldeffect" href={'/register'}>
        Register
      </link_1.default>
    </div>);
};
